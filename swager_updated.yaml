swagger: "2.0"
info:
  version: "v0.0.1"
  title: "Library API Spec"
  description: "This is an API for a library project that will be used in our SLO course."
schemes:
  - "http"
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"

paths:
  /v1/book:
    post:
      tags:
        - "Book"
      operationId: "CreateBook"
      parameters:
        - in: "body"
          name: "book"
          required: true
          schema:
            $ref: "#/definitions/CreateBookRequest"
      responses:
        "200":
          description: "A successful response and a book is created."
          schema:
            $ref: "#/definitions/CreateBookResponse"
        "403":
          description: "Another book with the same ID exists"
          schema:
            $ref: "#/definitions/CreateBookResponse"

    get:
      tags:
        - "Book"
      operationId: "ListBooks"
      responses:
        "200":
          description: "A successful response and a list of books is returned."
          schema:
            $ref: "#/definitions/ListBooksResponse"

  /v1/book/{bookID}:
    get:
      tags:
        - "Book"
      operationId: "GetBookById"
      parameters:
        - name: "bookID"
          in: "path"
          required: true
          type: "string"
          description: "The unique identifier of the book to retrieve."
      responses:
        "200":
          description: "Book details retrieved successfully."
          schema:
            $ref: "#/definitions/Book"
        "404":
          description: "Book not found."

    put:
      tags:
        - "Book"
      operationId: "UpdateBook"
      parameters:
        - name: "bookID"
          in: "path"
          required: true
          type: "string"
          description: "The unique identifier of the book to update."
        - in: "body"
          name: "book"
          required: true
          schema:
            $ref: "#/definitions/Book"
      responses:
        "200":
          description: "Book updated successfully."
          schema:
            $ref: "#/definitions/Book"
        "404":
          description: "Book not found."
        "400":
          description: "Invalid input provided."

    delete:
      tags:
        - "Book"
      operationId: "DeleteBook"
      parameters:
        - name: "bookID"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: "A successful response and the book is deleted."
          schema:
            $ref: "#/definitions/DeleteBookResponse"

definitions:
  CreateBookRequest:
    type: "object"
    properties:
      bookID:
        type: "string"
      bookDescription:
        type: "string"
      bookTitle:
        type: "string"
      bookAuthor:
        type: "string"

  CreateBookResponse:
    type: "object"
    properties:
      status:
        type: "string"
      message:
        type: "string"
    example:
      message: "message"
      status: "status"

  ListBooksResponse:
    type: array
    items:
      $ref: '#/definitions/Book'

  Book:
    type: object
    properties:
      bookID:
        type: "string"
      bookDescription:
        type: "string"
      bookTitle:
        type: "string"
      bookAuthor:
        type: "string"

  DeleteBookResponse:
    type: "object"
    properties:
      status:
        type: "string"
      message:
        type: "string"
    example:
      message: "message"
      status: "status"
x
