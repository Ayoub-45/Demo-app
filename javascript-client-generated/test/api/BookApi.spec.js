/*
 * Library API Spec
 * This is an API for a library project that will be used in our SLO course.
 *
 * OpenAPI spec version: v0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.75
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LibraryApiSpec);
  }
}(this, function(expect, LibraryApiSpec) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LibraryApiSpec.BookApi();
  });

  describe('(package)', function() {
    describe('BookApi', function() {
      describe('createBook', function() {
        it('should call createBook successfully', function(done) {
          // TODO: uncomment createBook call
          /*

          instance.createBook(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleteBook', function() {
        it('should call deleteBook successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteBook call
          /*

          instance.deleteBook(, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getBookById', function() {
        it('should call getBookById successfully', function(done) {
          // TODO: uncomment, update parameter values for getBookById call
          /*

          instance.getBookById(, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listBooks', function() {
        it('should call listBooks successfully', function(done) {
          // TODO: uncomment listBooks call
          /*

          instance.listBooks(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateBook', function() {
        it('should call updateBook successfully', function(done) {
          // TODO: uncomment, update parameter values for updateBook call
          /*

          instance.updateBook(, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
